---
import { SITE } from "$/config"
import { isComingSoon } from "$/lib/collection"
import { isDev, isProdBranch } from "$/lib/environment"
import type { SeriesArticleSlug, SeriesArticles } from "$/lib/series"
import { Icon } from "astro-icon/components"

interface Props {
  current: SeriesArticleSlug
  series: SeriesArticles
}

const { series, current } = Astro.props

const nextArticle = series.getNextArticle(current)
const getRecipePageUrl = (articleId: string) => SITE.base + `/recipes/${articleId}`
---

{
  nextArticle && (
    <>
      <h2>Next Step</h2>
      {isComingSoon(nextArticle) ? (
        <div class="Next-item coming-soon">
          <Icon name="carbon:construction" size={24} aria-label="coming soon" />
          {isDev() || !isProdBranch() ? (
            <a class="no-marker" href={getRecipePageUrl(nextArticle.id)}>
              {nextArticle.data.title}
            </a>
          ) : (
            <>{nextArticle.data.title}</>
          )}
        </div>
      ) : (
        <div class="Next-item">
          <Icon class="next-icon" name="hugeicons:trade-up" size={32} />
          <a class="no-marker" href={getRecipePageUrl(nextArticle.id)}>
            {nextArticle.data.title}
          </a>
        </div>
      )}
    </>
  )
}

<style>
  .Next-item {
    display: flex;
    align-items: flex-start;
    gap: 0.5em;
    color: light-dark(#475569, #e2e8f0);
    font-weight: 500;
  }
  .Next-item :global(svg) {
    flex-shrink: 0;
    color: var(--slate-400);
  }

  .coming-soon {
    align-items: center;
  }
  .coming-soon :global(svg) {
    color: var(--zinc-400);
  }
</style>
