---
import { getCollection, type CollectionEntry } from "astro:content"
import TagLink from "$components/tag/TagLink.astro"

const filterPublic = (entry: CollectionEntry<"recipe">) => {
  if (import.meta.env.DEV) return true
  return !entry.data.draft && !entry.data.private
}

const projects = await getCollection("project")
const events = await getCollection("event")
const recipes = await getCollection("recipe", filterPublic)
const writings = (await getCollection("writing")).flatMap((file) => file.data.map((data) => ({ data: { ...data } })))

const targetCollection = [...projects, ...events, ...recipes, ...writings]

const tagIdCountMap = targetCollection.reduce((acc, entry) => {
  const tags = entry.data.tags ?? []
  tags.forEach((tag) => {
    acc.set(tag.id, (acc.get(tag.id) ?? 0) + 1)
  })
  return acc
}, new Map<string, number>())

const tagIds = [...tagIdCountMap.entries()]
  .filter(([_, count]) => count > 0)
  .sort(([idA], [idB]) => idA.localeCompare(idB))
  .sort(([, countA], [, countB]) => countB - countA)
  .map(([id]) => id)
---

<ul class="TagsList">
  {
    tagIds.map((tagId) => (
      <li>
        <TagLink tagId={tagId} />
      </li>
    ))
  }
</ul>

<style>
  .TagsList {
    display: flex;
    list-style-type: none;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin: 0;
    padding: 0;
  }
</style>
