---
import Prose from "$components/prose/Prose.astro"
import type { CollectionEntry } from "astro:content"
import { render } from "astro:content"

interface Props {
  section: CollectionEntry<"like">
}

const { section } = Astro.props
const { Content } = await render(section)
---

<Prose>
  <h2 class="LikeSection-title">{section.data.title}</h2>
  <div class="LikeSection-content"><Content /></div>
</Prose>

<style>
  .LikeSection-title {
    text-transform: capitalize;
    text-align: center;
    word-break: auto-phrase;
  }
  .LikeSection-content {
    max-width: 44rem;
    margin-inline: auto;
  }
  .LikeSection-content :global(p) {
    font-size: 1.125rem;
    line-height: 1.75rem;
    line-height: 2;
  }
  .LikeSection-content :global(:is(mark, a)) {
    background: linear-gradient(rgba(255, 255, 255, 0) 80%, #bfe1fc91 20%);
    font-weight: bold;
    color: light-dark(var(--slate-500), var(--slate-200));
  }
  :global(.dark) .LikeSection-content :global(:is(mark, a)) {
    background: linear-gradient(rgba(255, 255, 255, 0) 90%, rgb(191 225 252 / 50%) 10%);
  }
  .LikeSection-content :global(a) {
    text-decoration: none;
    display: inline-flex;
    align-items: baseline;
    line-height: 1.3;
  }
  .LikeSection-content :global(a)::after {
    content: "";
    display: inline-block;
    width: 0.75em;
    height: 0.75em;
    --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1'%3E%3Cpath stroke-dasharray='48' stroke-dashoffset='48' d='M11 5h-6v14h14v-6'%3E%3Canimate fill='freeze' attributeName='stroke-dashoffset' dur='0.6s' values='48;0'/%3E%3C/path%3E%3Cpath stroke-dasharray='12' stroke-dashoffset='12' d='M13 11l7 -7'%3E%3Canimate fill='freeze' attributeName='stroke-dashoffset' begin='0.6s' dur='0.2s' values='12;0'/%3E%3C/path%3E%3Cpath stroke-dasharray='8' stroke-dashoffset='8' d='M21 3h-6M21 3v6'%3E%3Canimate fill='freeze' attributeName='stroke-dashoffset' begin='0.8s' dur='0.2s' values='8;0'/%3E%3C/path%3E%3C/g%3E%3C/svg%3E");
    background-color: currentColor;
    mask-image: var(--svg);
    mask-repeat: no-repeat;
    mask-size: 100% 100%;
  }
  .LikeSection-content :global(li > a) {
    font-size: 1.25em;
    background: linear-gradient(rgba(255, 255, 255, 0) 70%, #f9e0ec 30%);
  }
  :global(.dark) .LikeSection-content :global(li > a) {
    background: linear-gradient(rgba(255, 255, 255, 0) 70%, rgb(242 137 188 / 34%) 30%);
  }

  .LikeSection-content :global(.small-note) {
    padding: 1rem;
    position: relative;
  }
  .LikeSection-content :global(.small-note)::before,
  .LikeSection-content :global(.small-note)::after {
    --border-color: #6bbeff;

    position: absolute;
    top: 0;
    content: "";
    width: 10px;
    height: 100%;
    display: inline-block;
    box-sizing: border-box;
  }
  .LikeSection-content :global(.small-note)::before {
    border-left: dotted 2px var(--border-color);
    border-top: dotted 2px var(--border-color);
    border-bottom: dotted 2px var(--border-color);
    left: 0;
  }
  .LikeSection-content :global(.small-note)::after {
    border-top: dotted 2px var(--border-color);
    border-right: dotted 2px var(--border-color);
    border-bottom: dotted 2px var(--border-color);
    right: 0;
  }
  .LikeSection-content :global(.small-note p) {
    margin: 0;
    padding: 0;
    font-size: 0.875rem;
    line-height: 1.5rem;
    color: light-dark(var(--slate-500), var(--slate-200));
  }
</style>
