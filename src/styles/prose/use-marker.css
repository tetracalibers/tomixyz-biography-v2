.prose :is(mark, a) {
  background: linear-gradient(rgba(255, 255, 255, 0) 80%, #bfe1fc91 20%);
  font-weight: bold;
  color: light-dark(var(--slate-500), var(--slate-200));
}
.dark .prose :is(mark, a) {
  background: linear-gradient(rgba(255, 255, 255, 0) 90%, rgb(191 225 252 / 50%) 10%);
}

.prose a {
  text-decoration: none;
  line-height: 1.3;
}
.prose a::after {
  content: "";
  display: inline-block;
  width: 0.9em;
  height: 0.9em;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%23000' stroke-dasharray='28' stroke-dashoffset='28' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 6l2 -2c1 -1 3 -1 4 0l1 1c1 1 1 3 0 4l-5 5c-1 1 -3 1 -4 0M11 18l-2 2c-1 1 -3 1 -4 0l-1 -1c-1 -1 -1 -3 0 -4l5 -5c1 -1 3 -1 4 0'%3E%3Canimate fill='freeze' attributeName='stroke-dashoffset' dur='0.6s' values='28;0'/%3E%3C/path%3E%3C/svg%3E");
  background-color: currentColor;
  mask-image: var(--svg);
  mask-repeat: no-repeat;
  mask-size: 100% 100%;
  vertical-align: text-bottom;
}

.prose li > a {
  font-size: 1em;
  background: linear-gradient(rgba(255, 255, 255, 0) 70%, #f9e0ec 30%);
}
.dark .prose li > a {
  background: linear-gradient(rgba(255, 255, 255, 0) 70%, rgb(242 137 188 / 34%) 30%);
}
