---
import type { CollectionEntry } from "astro:content"
import { SITE } from "$/config"
import MainLayout from "$/components/layout/MainLayout.astro"
import BaseHead from "$/components/layout/BaseHead.astro"
import ProseGridFill from "$/components/prose/ProseGridFill.astro"
import AvatarImage from "$components/article-header/layout-2/AvatarImage.astro"
import PublishDate from "$components/article-header/PublishDate.astro"
import type { MarkdownHeading } from "astro"
import Body from "$components/layout/Body.astro"
import ArticleTitle from "$components/article-header/layout-2/ArticleTitle.astro"
import ArticleSummary from "$components/article-header/layout-2/ArticleSummary.astro"
import ArticleHeaderBlock from "$components/article-header/layout-2/ArticleHeaderBlock.astro"
import TagList from "$components/article-header/TagList.astro"
import { collectSeriesArticles } from "$/lib/series"
import RecipeToc from "$components/toc/RecipeToc.astro"
import NextArticles from "$components/series/NextArticles.astro"
import SeriesTitle from "$components/series/SeriesTitle.astro"

interface Props {
  entry: CollectionEntry<"recipe">
  headings: MarkdownHeading[]
  meta?: {
    description?: string
    ogimage?: string
  }
}

const { entry, headings, meta } = Astro.props
const { data: content } = entry
const { series: seriesOrNone } = content

const AUTHOR_NAME = SITE.author

const series = seriesOrNone ? await collectSeriesArticles(seriesOrNone.id) : null
const indexInSeries = series && series.data.articles.findIndex((article) => article.id === entry.id)
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead
      image={meta?.ogimage ?? "/og-image.png"}
      title={content.title}
      description={meta?.description ?? content.description}
    />
  </head>
  <Body>
    <MainLayout>
      <div class="MainLayout-inner">
        <ArticleHeaderBlock>
          <Fragment slot="content">
            {series && <SeriesTitle title={series.data.title} seriesId={series.id} indexInSeries={indexInSeries!} />}
            <ArticleTitle title={content.title} />
            <ArticleSummary summary={content.description} />
            <TagList tags={content.tags} />
          </Fragment>
          <Fragment slot="avatar"><AvatarImage /></Fragment>
          <Fragment slot="author">{AUTHOR_NAME}</Fragment>
          <Fragment slot="publish"><PublishDate date={content.date} /></Fragment>
        </ArticleHeaderBlock>
        <RecipeToc headings={headings} current={entry.id} series={series} />
        <ProseGridFill>
          <div class="main-content">
            <slot />
            {series && <NextArticles current={entry.id} series={series} />}
          </div>
        </ProseGridFill>
      </div>
    </MainLayout>
  </Body>
</html>

<style>
  .MainLayout-inner {
    display: grid;
    gap: 2rem;
  }
  .main-content {
    font-size: 1.125rem;
    line-height: 1.75rem;
    line-height: 2;
  }
  .main-content :global(p > img) {
    --fluid-bp-320-600: calc((100vw - 320px) / (600 - 320));
    --__max-height: 300px;
    --__space: clamp(16px, (16px + (68 - 16) * var(--fluid-bp-320-600)), 68px);

    width: 100%;
    height: 100%;
    max-height: calc(var(--__max-height) + var(--__space) * 2);

    box-sizing: border-box;

    object-position: center;
    object-fit: contain;
  }

  .main-content :global(.demo) {
    margin-inline: auto;
  }
  .main-content :global(img[src$="svg"]) {
    max-height: 250px;
    display: block;
    margin-inline: auto;
  }
</style>
