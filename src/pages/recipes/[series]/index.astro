---
import { getCollection, type CollectionEntry } from "astro:content"
import DefaultPageLayout from "$/layouts/default.astro"
import type { GetStaticPaths } from "astro"
import RecipePreviewList from "$components/preview/recipe/series/RecipePreviewList.astro"
import { render } from "astro:content"
import Prose from "$components/prose/Prose.astro"
import { getEntries } from "astro:content"

export const getStaticPaths: GetStaticPaths = async () => {
  const filterPublic = (entry: CollectionEntry<"recipe">) => {
    if (import.meta.env.DEV) return true
    return !entry.data.draft
  }

  const series = await getCollection("series")

  return Promise.all(
    series.map(async (series) => {
      const recipes = (await getEntries(series.data.articles)).filter(filterPublic)

      return {
        params: { series: series.id },
        props: {
          recipes,
          series
        }
      }
    })
  )
}

interface Props {
  recipes: CollectionEntry<"recipe">[]
  series: CollectionEntry<"series">
}

const { recipes, series } = Astro.props

const { Content } = await render(series)

const title = series.data.title
const description = "シリーズ記事一覧"
const meta = {
  ogimage: `/og-image/recipes/${series}.png`
}
---

<DefaultPageLayout content={{ title, description }} meta={{ ...meta }} style={{ title_small: true }}>
  <div class="Layout-inner">
    <Prose>
      <div class="series-summary"><Content /></div>
    </Prose>
    <RecipePreviewList entries={recipes} />
  </div>
</DefaultPageLayout>

<style>
  .Layout-inner {
    max-width: 44rem;
    margin-inline: auto;
    display: grid;
    gap: 2rem;
  }
  .series-summary :global(:first-child) {
    margin-block-start: 0;
  }
  .series-summary :global(:last-child) {
    margin-block-end: 0;
  }
</style>
